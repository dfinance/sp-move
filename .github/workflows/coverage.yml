name: Extra
on:
  pull_request:
  push:
    branches:
      - master

env:
  RUSTUP_MAX_RETRIES: 10
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    name: "Coverage"
    runs-on: self-hosted
    # runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        cfg:
          - grcov: grcov-linux-x86_64.tar.bz2
            dove: linux-x86_64
          # - os: self-hosted
          #   grcov: grcov-linux-x86_64.tar.bz2
          ## macos disabled because it's so long
          # - os: macos-latest
          #   grcov: grcov-osx-x86_64.tar.bz2

    env:
      SKIP_WASM_BUILD: 1
      CARGO_INCREMENTAL: 0
      # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
      # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads"
      RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off"
      RUSTDOCFLAGS: "-Cpanic=abort"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: cargo clean
        run: cargo clean

      - name: get latest grcov binary
        # if: matrix.cfg.os == 'ubuntu-latest'
        uses: dsaltares/fetch-gh-release-asset@0.0.5
        with:
          repo: mozilla/grcov
          version: "latest"
          file: ${{ matrix.cfg.grcov }}

      - name: unpack grcov release binary
        # if: matrix.cfg.os == 'ubuntu-latest'
        run: |
          tar -xvf ${{ matrix.cfg.grcov }}
          sudo chown runner ./grcov && chmod +x ./grcov
          cp grcov ~/.cargo/bin/grcov
          rm ${{ matrix.cfg.grcov }}

      - name: get Dove
        run: |
          curl -sL --fail \
            -H "Accept: application/octet-stream" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -o "dove" \
            "https://github.com/pontem-network/move-tools/releases/download/1.1.4/dove-1.1.4-${{ matrix.cfg.dove }}"
          sudo chown runner ./dove && chmod +x ./dove
          mv ./dove ~/.cargo/bin/dove
          dove -V
      - name: Build test resources
        run: pushd pallets/sp-mvm/tests/assets; ./build_assets.sh

      - name: cargo build tests +profile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p=sp-mvm --all-features --no-fail-fast

      - id: coverage_html
        name: coverage analysis with grcov (html)
        uses: actions-rs/grcov@v0.1
        with:
          config: .github/grcov+html.yml
      - name: make report artifact
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report.html
          path: ${{ steps.coverage_html.outputs.report }}

      - id: coverage
        name: coverage analysis with grcov
        uses: actions-rs/grcov@v0.1
        with:
          config: .github/grcov.yml

      - name: make report artifact
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: ${{ steps.coverage.outputs.report }}

      # - name: upload report to Coveralls
      #   uses: coverallsapp/github-action@v1.1.2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: ${{ steps.coverage.outputs.report }}
